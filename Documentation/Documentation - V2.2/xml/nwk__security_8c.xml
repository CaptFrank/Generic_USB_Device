<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.6.1">
  <compounddef id="nwk__security_8c" kind="file">
    <compoundname>nwk_security.c</compoundname>
    <includes local="no">string.h</includes>
    <includes refid="mrfi_8h" local="yes">mrfi.h</includes>
    <includes refid="nwk__types_8h" local="yes">nwk_types.h</includes>
    <includes refid="nwk__security_8h" local="yes">nwk_security.h</includes>
    <includes refid="nwk__frame_8h" local="yes">nwk_frame.h</includes>
    <includes refid="nwk_8h" local="yes">nwk.h</includes>
    <incdepgraph>
      <node id="1651">
        <label>bsp_macros.h</label>
        <link refid="bsp__macros_8h"/>
      </node>
      <node id="1646">
        <label>mrfi.h</label>
        <link refid="mrfi_8h"/>
        <childnode refid="1647" relation="include">
        </childnode>
        <childnode refid="1652" relation="include">
        </childnode>
      </node>
      <node id="1652">
        <label>mrfi_defs.h</label>
        <link refid="mrfi__defs_8h"/>
        <childnode refid="1647" relation="include">
        </childnode>
      </node>
      <node id="1648">
        <label>bsp_board_defs.h</label>
        <link refid="bsp__board__defs_8h"/>
        <childnode refid="1649" relation="include">
        </childnode>
        <childnode refid="1650" relation="include">
        </childnode>
      </node>
      <node id="1655">
        <label>nwk_frame.h</label>
        <link refid="nwk__frame_8h"/>
      </node>
      <node id="1645">
        <label>string.h</label>
      </node>
      <node id="1649">
        <label>mcus/bsp_msp430_defs.h</label>
        <link refid="bsp__msp430__defs_8h"/>
      </node>
      <node id="1647">
        <label>bsp.h</label>
        <link refid="bsp_8h"/>
        <childnode refid="1648" relation="include">
        </childnode>
        <childnode refid="1651" relation="include">
        </childnode>
      </node>
      <node id="1644">
        <label>Original Code/V2.2/simpliciti/Components/nwk_applications/nwk_security.c</label>
        <link refid="nwk_security.c"/>
        <childnode refid="1645" relation="include">
        </childnode>
        <childnode refid="1646" relation="include">
        </childnode>
        <childnode refid="1653" relation="include">
        </childnode>
        <childnode refid="1654" relation="include">
        </childnode>
        <childnode refid="1655" relation="include">
        </childnode>
        <childnode refid="1656" relation="include">
        </childnode>
      </node>
      <node id="1654">
        <label>nwk_security.h</label>
        <link refid="nwk__security_8h"/>
      </node>
      <node id="1653">
        <label>nwk_types.h</label>
        <link refid="nwk__types_8h"/>
      </node>
      <node id="1650">
        <label>bsp_config.h</label>
        <link refid="bsp__config_8h"/>
      </node>
      <node id="1656">
        <label>nwk.h</label>
        <link refid="nwk_8h"/>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="nwk__security_8c_1aa7bcb7081472b164d849cef6d0e62908" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nwk_securityInit</definition>
        <argsstring>(void)</argsstring>
        <name>nwk_securityInit</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/francispapineau/Documents/4th year project/Source Code/Black-Box-Mouse-Interface/Original Code/V2.2/simpliciti/Components/nwk_applications/nwk_security.c" line="155" bodyfile="/Users/francispapineau/Documents/4th year project/Source Code/Black-Box-Mouse-Interface/Original Code/V2.2/simpliciti/Components/nwk_applications/nwk_security.c" bodystart="154" bodyend="171"/>
      </memberdef>
      <memberdef kind="function" id="nwk__security_8c_1a4b5b40b8776596294275eee51c62a6c5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="nwk__types_8h_1af223ab49f851993ce1ca1a2f8c07d588" kindref="member">fhStatus_t</ref></type>
        <definition>fhStatus_t nwk_processSecurity</definition>
        <argsstring>(mrfiPacket_t *frame)</argsstring>
        <name>nwk_processSecurity</name>
        <param>
          <type><ref refid="structmrfiPacket__t" kindref="compound">mrfiPacket_t</ref> *</type>
          <declname>frame</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/francispapineau/Documents/4th year project/Source Code/Black-Box-Mouse-Interface/Original Code/V2.2/simpliciti/Components/nwk_applications/nwk_security.c" line="186" bodyfile="/Users/francispapineau/Documents/4th year project/Source Code/Black-Box-Mouse-Interface/Original Code/V2.2/simpliciti/Components/nwk_applications/nwk_security.c" bodystart="185" bodyend="188"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/**************************************************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/><sp/>Filename:<sp/><sp/><sp/><sp/><sp/><sp/><sp/>nwk_security.c</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/>Revised:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$Date:<sp/>2009-01-20<sp/>14:05:46<sp/>-0800<sp/>(Tue,<sp/>20<sp/>Jan<sp/>2009)<sp/>$</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/><sp/>Revision:<sp/><sp/><sp/><sp/><sp/><sp/><sp/>$Revision:<sp/>18816<sp/>$</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/>Author:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$Author:<sp/>lfriedman<sp/>$</highlight></codeline>
<codeline lineno="6"><highlight class="comment"></highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/><sp/>Description:<sp/><sp/><sp/><sp/>This<sp/>file<sp/>supports<sp/>the<sp/>SimpliciTI<sp/>Security<sp/>network<sp/>application.</highlight></codeline>
<codeline lineno="8"><highlight class="comment"></highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/><sp/>Copyright<sp/>2008-2009<sp/>Texas<sp/>Instruments<sp/>Incorporated.<sp/>All<sp/>rights<sp/>reserved.</highlight></codeline>
<codeline lineno="10"><highlight class="comment"></highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/><sp/>IMPORTANT:<sp/>Your<sp/>use<sp/>of<sp/>this<sp/>Software<sp/>is<sp/>limited<sp/>to<sp/>those<sp/>specific<sp/>rights<sp/>granted<sp/>under</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/><sp/>the<sp/>terms<sp/>of<sp/>a<sp/>software<sp/>license<sp/>agreement<sp/>between<sp/>the<sp/>user<sp/>who<sp/>downloaded<sp/>the<sp/>software,</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/><sp/>his/her<sp/>employer<sp/>(which<sp/>must<sp/>be<sp/>your<sp/>employer)<sp/>and<sp/>Texas<sp/>Instruments<sp/>Incorporated<sp/>(the</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/><sp/>&quot;License&quot;).<sp/>You<sp/>may<sp/>not<sp/>use<sp/>this<sp/>Software<sp/>unless<sp/>you<sp/>agree<sp/>to<sp/>abide<sp/>by<sp/>the<sp/>terms<sp/>of<sp/>the</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/><sp/>License.<sp/>The<sp/>License<sp/>limits<sp/>your<sp/>use,<sp/>and<sp/>you<sp/>acknowledge,<sp/>that<sp/>the<sp/>Software<sp/>may<sp/>not<sp/>be</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/><sp/>modified,<sp/>copied<sp/>or<sp/>distributed<sp/>unless<sp/>embedded<sp/>on<sp/>a<sp/>Texas<sp/>Instruments<sp/>microcontroller</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/><sp/>or<sp/>used<sp/>solely<sp/>and<sp/>exclusively<sp/>in<sp/>conjunction<sp/>with<sp/>a<sp/>Texas<sp/>Instruments<sp/>radio<sp/>frequency</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/><sp/>transceiver,<sp/>which<sp/>is<sp/>integrated<sp/>into<sp/>your<sp/>product.<sp/>Other<sp/>than<sp/>for<sp/>the<sp/>foregoing<sp/>purpose,</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/><sp/>you<sp/>may<sp/>not<sp/>use,<sp/>reproduce,<sp/>copy,<sp/>prepare<sp/>derivative<sp/>works<sp/>of,<sp/>modify,<sp/>distribute,</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/><sp/>perform,<sp/>display<sp/>or<sp/>sell<sp/>this<sp/>Software<sp/>and/or<sp/>its<sp/>documentation<sp/>for<sp/>any<sp/>purpose.</highlight></codeline>
<codeline lineno="21"><highlight class="comment"></highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/><sp/>YOU<sp/>FURTHER<sp/>ACKNOWLEDGE<sp/>AND<sp/>AGREE<sp/>THAT<sp/>THE<sp/>SOFTWARE<sp/>AND<sp/>DOCUMENTATION<sp/>ARE<sp/>PROVIDED<sp/>“AS<sp/>IS”</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/><sp/>WITHOUT<sp/>WARRANTY<sp/>OF<sp/>ANY<sp/>KIND,<sp/>EITHER<sp/>EXPRESS<sp/>OR<sp/>IMPLIED,<sp/>INCLUDING<sp/>WITHOUT<sp/>LIMITATION,<sp/>ANY</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/><sp/>WARRANTY<sp/>OF<sp/>MERCHANTABILITY,<sp/>TITLE,<sp/>NON-INFRINGEMENT<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/><sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>TEXAS<sp/>INSTRUMENTS<sp/>OR<sp/>ITS<sp/>LICENSORS<sp/>BE<sp/>LIABLE<sp/>OR<sp/>OBLIGATED<sp/>UNDER<sp/>CONTRACT,</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/><sp/>NEGLIGENCE,<sp/>STRICT<sp/>LIABILITY,<sp/>CONTRIBUTION,<sp/>BREACH<sp/>OF<sp/>WARRANTY,<sp/>OR<sp/>OTHER<sp/>LEGAL<sp/>EQUITABLE</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/><sp/>THEORY<sp/>ANY<sp/>DIRECT<sp/>OR<sp/>INDIRECT<sp/>DAMAGES<sp/>OR<sp/>EXPENSES<sp/>INCLUDING<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO<sp/>ANY</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/><sp/>INCIDENTAL,<sp/>SPECIAL,<sp/>INDIRECT,<sp/>PUNITIVE<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES,<sp/>LOST<sp/>PROFITS<sp/>OR<sp/>LOST</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/><sp/>DATA,<sp/>COST<sp/>OF<sp/>PROCUREMENT<sp/>OF<sp/>SUBSTITUTE<sp/>GOODS,<sp/>TECHNOLOGY,<sp/>SERVICES,<sp/>OR<sp/>ANY<sp/>CLAIMS<sp/>BY</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/><sp/>THIRD<sp/>PARTIES<sp/>(INCLUDING<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO<sp/>ANY<sp/>DEFENSE<sp/>THEREOF),<sp/>OR<sp/>OTHER<sp/>SIMILAR<sp/>COSTS.</highlight></codeline>
<codeline lineno="31"><highlight class="comment"></highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/><sp/>Should<sp/>you<sp/>have<sp/>any<sp/>questions<sp/>regarding<sp/>your<sp/>right<sp/>to<sp/>use<sp/>this<sp/>Software,</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/><sp/>contact<sp/>Texas<sp/>Instruments<sp/>Incorporated<sp/>at<sp/>www.TI.com.</highlight></codeline>
<codeline lineno="34"><highlight class="comment">**************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment">/******************************************************************************</highlight></codeline>
<codeline lineno="37"><highlight class="comment"><sp/>*<sp/>INCLUDES</highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>needed<sp/>for<sp/>NULL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="mrfi_8h" kindref="compound">mrfi.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="nwk__types_8h" kindref="compound">nwk_types.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="nwk__security_8h" kindref="compound">nwk_security.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="nwk__frame_8h" kindref="compound">nwk_frame.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="nwk_8h" kindref="compound">nwk.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>SMPL_SECURE</highlight></codeline>
<codeline lineno="48"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>***<sp/>GENERAL<sp/>SECURITY<sp/>OUTLINE<sp/>***</highlight></codeline>
<codeline lineno="50"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="51"><highlight class="comment"><sp/>*<sp/>We<sp/>are<sp/>using<sp/>XTEA<sp/>(eXtended<sp/>Tiny<sp/>Encryption<sp/>Algorithm)<sp/>with<sp/>a<sp/>fixed</highlight></codeline>
<codeline lineno="52"><highlight class="comment"><sp/>*<sp/>number<sp/>of<sp/>rounds<sp/>(32).<sp/>We<sp/>have<sp/>removed<sp/>the<sp/>parameters<sp/>from<sp/>the<sp/>API</highlight></codeline>
<codeline lineno="53"><highlight class="comment"><sp/>*<sp/>we<sp/>harvested<sp/>from<sp/>the<sp/>public<sp/>domain.</highlight></codeline>
<codeline lineno="54"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="55"><highlight class="comment"><sp/>*<sp/>We<sp/>are<sp/>using<sp/>a<sp/>CTR-like<sp/>mode.<sp/>We<sp/>use<sp/>the<sp/>64-bit<sp/>block<sp/>cipher<sp/>function<sp/>of<sp/>the</highlight></codeline>
<codeline lineno="56"><highlight class="comment"><sp/>*<sp/>XTEA<sp/>code<sp/>to<sp/>encipher<sp/>a<sp/>concatenation<sp/>of<sp/>the<sp/>32-bit<sp/>initialization<sp/>vector<sp/>and</highlight></codeline>
<codeline lineno="57"><highlight class="comment"><sp/>*<sp/>a<sp/>32-bit<sp/>counter<sp/>that<sp/>increments<sp/>each<sp/>block.<sp/>We<sp/>encrypt<sp/>using<sp/>a<sp/>fixed<sp/>128-bit</highlight></codeline>
<codeline lineno="58"><highlight class="comment"><sp/>*<sp/>key.<sp/>The<sp/>resulting<sp/>64-bit<sp/>output<sp/>is<sp/>XOR&apos;ed<sp/>with<sp/>the<sp/>message.<sp/>If<sp/>the<sp/>message<sp/>is</highlight></codeline>
<codeline lineno="59"><highlight class="comment"><sp/>*<sp/>longer<sp/>than<sp/>64<sp/>bits<sp/>we<sp/>encipher<sp/>the<sp/>next<sp/>block<sp/>(incrementing<sp/>the<sp/>counter)<sp/>and</highlight></codeline>
<codeline lineno="60"><highlight class="comment"><sp/>*<sp/>continue<sp/>until<sp/>the<sp/>message<sp/>is<sp/>exhausted.<sp/>If<sp/>the<sp/>last<sp/>cipher<sp/>block<sp/>is<sp/>longer</highlight></codeline>
<codeline lineno="61"><highlight class="comment"><sp/>*<sp/>than<sp/>the<sp/>message<sp/>we<sp/>simply<sp/>discard<sp/>the<sp/>remaining<sp/>cipher<sp/>block.</highlight></codeline>
<codeline lineno="62"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="comment">/******************************************************************************</highlight></codeline>
<codeline lineno="66"><highlight class="comment"><sp/>*<sp/>MACROS</highlight></codeline>
<codeline lineno="67"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="comment">/******************************************************************************</highlight></codeline>
<codeline lineno="70"><highlight class="comment"><sp/>*<sp/>CONSTANTS<sp/>AND<sp/>DEFINES</highlight></codeline>
<codeline lineno="71"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>The<sp/>counter<sp/>can<sp/>be<sp/>off<sp/>by<sp/>quite<sp/>a<sp/>bit<sp/>because<sp/>the<sp/>number<sp/>of<sp/>cipher</highlight></codeline>
<codeline lineno="74"><highlight class="comment"><sp/>*<sp/>blocks<sp/>can<sp/>easily<sp/>be<sp/>more<sp/>than<sp/>1<sp/>per<sp/>frame.<sp/>Value<sp/>limited<sp/>to<sp/>a</highlight></codeline>
<codeline lineno="75"><highlight class="comment"><sp/>*<sp/>maximum<sp/>of<sp/>255.</highlight></codeline>
<codeline lineno="76"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CTR_WINDOW<sp/><sp/>255</highlight></codeline>
<codeline lineno="78"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(CTR_WINDOW<sp/>&gt;<sp/>255)<sp/>||<sp/>(CTR_WINDOW<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="80"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#error<sp/>ERROR:<sp/>0<sp/>&lt;=<sp/>CTR_WINDOW<sp/>&lt;<sp/>256</highlight></codeline>
<codeline lineno="81"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="82"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Number<sp/>of<sp/>rounds<sp/>for<sp/>XTEA<sp/>algorithm.<sp/>A<sp/>parameter<sp/>in<sp/>the<sp/>public<sp/>domain<sp/>code</highlight></codeline>
<codeline lineno="84"><highlight class="comment"><sp/>*<sp/>but<sp/>we<sp/>fix<sp/>it<sp/>here<sp/>at<sp/>32.</highlight></codeline>
<codeline lineno="85"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NUM_ROUNDS<sp/><sp/>32</highlight></codeline>
<codeline lineno="87"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Key<sp/>and<sp/>cipher<sp/>block<sp/>size<sp/>constants<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SMPL_KEYSIZE_BYTES<sp/><sp/><sp/><sp/>16</highlight></codeline>
<codeline lineno="90"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>SMPL_KEYSIZE_LONGS<sp/><sp/><sp/><sp/><sp/>4</highlight></codeline>
<codeline lineno="91"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="comment">/******************************************************************************</highlight></codeline>
<codeline lineno="93"><highlight class="comment"><sp/>*<sp/>TYPEDEFS</highlight></codeline>
<codeline lineno="94"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Union<sp/>used<sp/>to<sp/>access<sp/>key<sp/>as<sp/>both<sp/>a<sp/>string<sp/>and<sp/>as<sp/>unsigned<sp/>longs<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">union</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal">{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><ref refid="bsp__msp430__defs_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref><sp/><sp/>keyS[SMPL_KEYSIZE_BYTES];</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><ref refid="bsp__msp430__defs_8h_1a06896e8c53f721507066c079052171f8" kindref="member">uint32_t</ref><sp/>keyL[SMPL_KEYSIZE_LONGS];</highlight></codeline>
<codeline lineno="100"><highlight class="normal">}<sp/>key_t;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="comment">/******************************************************************************</highlight></codeline>
<codeline lineno="104"><highlight class="comment"><sp/>*<sp/>LOCAL<sp/>VARIABLES</highlight></codeline>
<codeline lineno="105"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>32-bit<sp/>Initialization<sp/>vector<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="bsp__msp430__defs_8h_1a06896e8c53f721507066c079052171f8" kindref="member">uint32_t</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>sIV<sp/>=<sp/>0x87654321;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>128-bit<sp/>(16<sp/>byte)<sp/>key.<sp/>Initialized<sp/>as<sp/>string<sp/>but<sp/>fetched<sp/>and<sp/>used<sp/>in<sp/>XTEA</highlight></codeline>
<codeline lineno="110"><highlight class="comment"><sp/>*<sp/>encryption<sp/>as<sp/>4<sp/>unsigned<sp/>longs.<sp/>Endianess<sp/>could<sp/>count<sp/>if<sp/>the<sp/>peers<sp/>are<sp/>on</highlight></codeline>
<codeline lineno="111"><highlight class="comment"><sp/>*<sp/>two<sp/>different<sp/>MCUs.<sp/>Endianess<sp/>is<sp/>rectified<sp/>in<sp/>initialization<sp/>code.</highlight></codeline>
<codeline lineno="112"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="113"><highlight class="comment"><sp/>*<sp/>Initialization<sp/>_MUST_<sp/>be<sp/>done<sp/>as<sp/>a<sp/>string<sp/>(or<sp/>character<sp/>array).<sp/>Though<sp/>it</highlight></codeline>
<codeline lineno="114"><highlight class="comment"><sp/>*<sp/>won&apos;t<sp/>matter<sp/>how<sp/>the<sp/>initialization<sp/>is<sp/>done<sp/>if<sp/>both<sp/>peers<sp/>are<sp/>the<sp/>same</highlight></codeline>
<codeline lineno="115"><highlight class="comment"><sp/>*<sp/>endianness,<sp/>good<sp/>prectice<sp/>will<sp/>initialize<sp/>these<sp/>as<sp/>a<sp/>string<sp/>(or<sp/>character</highlight></codeline>
<codeline lineno="116"><highlight class="comment"><sp/>*<sp/>array)<sp/>so<sp/>that<sp/>the<sp/>endianess<sp/>reconciliation<sp/>works<sp/>properly<sp/>for<sp/>all<sp/>cases.</highlight></codeline>
<codeline lineno="117"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>key_t<sp/>sKey<sp/>=<sp/>{</highlight><highlight class="stringliteral">&quot;SimpliciTI&apos;s<sp/>Key&quot;</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Constant<sp/>set<sp/>as<sp/>an<sp/>authentication<sp/>code.<sp/>Note<sp/>that<sp/>since<sp/>it<sp/>is<sp/>a</highlight></codeline>
<codeline lineno="121"><highlight class="comment"><sp/>*<sp/>fixed<sp/>value<sp/>as<sp/>opposed<sp/>to<sp/>a<sp/>hash<sp/>of<sp/>the<sp/>message<sp/>it<sp/>does<sp/>not<sp/>provide</highlight></codeline>
<codeline lineno="122"><highlight class="comment"><sp/>*<sp/>an<sp/>integrity<sp/>check.<sp/>It<sp/>will<sp/>only<sp/>differentiate<sp/>two<sp/>message<sp/>encryptions</highlight></codeline>
<codeline lineno="123"><highlight class="comment"><sp/>*<sp/>with<sp/>the<sp/>same<sp/>LSB<sp/>but<sp/>different<sp/>MSB<sp/>components.<sp/>Thus<sp/>it<sp/>helps<sp/>guard</highlight></codeline>
<codeline lineno="124"><highlight class="comment"><sp/>*<sp/>against<sp/>replays.</highlight></codeline>
<codeline lineno="125"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="nwk__types_8h_1a7c99d18160f11776f42f077b8ee897cd" kindref="member">secMAC_t</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>sMAC<sp/>=<sp/>0xA5;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>This<sp/>is<sp/>the<sp/>64-bit<sp/>cipher<sp/>block<sp/>target.<sp/>It<sp/>is<sp/>this<sp/>64-bit<sp/>block<sp/>that</highlight></codeline>
<codeline lineno="129"><highlight class="comment"><sp/>*<sp/>is<sp/>XOR&apos;ed<sp/>with<sp/>the<sp/>actual<sp/>message<sp/>to<sp/>be<sp/>encrypted.</highlight></codeline>
<codeline lineno="130"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="bsp__msp430__defs_8h_1a06896e8c53f721507066c079052171f8" kindref="member">uint32_t</ref><sp/>sMsg[2]<sp/>=<sp/>{0,<sp/>0};</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="comment">/******************************************************************************</highlight></codeline>
<codeline lineno="134"><highlight class="comment"><sp/>*<sp/>LOCAL<sp/>FUNCTIONS</highlight></codeline>
<codeline lineno="135"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="nwk__types_8h_1a807b0bdbf0ef0bb8a92bec1eeb688b35" kindref="member">secFCS_t</ref><sp/>calcFCS(<ref refid="bsp__msp430__defs_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref><sp/>*,<sp/><ref refid="bsp__msp430__defs_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref>);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>msg_encipher(<ref refid="bsp__msp430__defs_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref><sp/>*,<sp/><ref refid="bsp__msp430__defs_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref>,<sp/><ref refid="bsp__msp430__defs_8h_1a06896e8c53f721507066c079052171f8" kindref="member">uint32_t</ref><sp/>*);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>msg_decipher(<ref refid="bsp__msp430__defs_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref><sp/>*,<sp/><ref refid="bsp__msp430__defs_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref>,<sp/><ref refid="bsp__msp430__defs_8h_1a06896e8c53f721507066c079052171f8" kindref="member">uint32_t</ref><sp/>*);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>xtea_encipher(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/></highlight><highlight class="comment">/*<sp/>SMPL_SECURE<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="comment">/******************************************************************************</highlight></codeline>
<codeline lineno="144"><highlight class="comment"><sp/>*<sp/>@fn<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nwk_securityInit</highlight></codeline>
<codeline lineno="145"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="146"><highlight class="comment"><sp/>*<sp/>@brief<sp/><sp/><sp/><sp/><sp/><sp/><sp/>Initialize<sp/>Security<sp/>network<sp/>application.</highlight></codeline>
<codeline lineno="147"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="148"><highlight class="comment"><sp/>*<sp/>input<sp/>parameters</highlight></codeline>
<codeline lineno="149"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="150"><highlight class="comment"><sp/>*<sp/>output<sp/>parameters</highlight></codeline>
<codeline lineno="151"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="152"><highlight class="comment"><sp/>*<sp/>@return<sp/><sp/><sp/><sp/><sp/><sp/>void</highlight></codeline>
<codeline lineno="153"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154" refid="nwk__security_8h_1aa7bcb7081472b164d849cef6d0e62908" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="nwk__security_8c_1aa7bcb7081472b164d849cef6d0e62908" kindref="member">nwk_securityInit</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="155"><highlight class="normal">{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>SMPL_SECURE</highlight></codeline>
<codeline lineno="157"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><ref refid="bsp__msp430__defs_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref><sp/><sp/>i;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>key<sp/>is<sp/>set<sp/>as<sp/>a<sp/>string.<sp/>But<sp/>the<sp/>XTEA<sp/>routines<sp/>operate<sp/>on<sp/>32-bit</highlight></codeline>
<codeline lineno="160"><highlight class="comment"><sp/><sp/><sp/>*<sp/>unsigned<sp/>longs.<sp/>Endianess<sp/>should<sp/>be<sp/>taken<sp/>into<sp/>account<sp/>and<sp/>we<sp/>do<sp/>that</highlight></codeline>
<codeline lineno="161"><highlight class="comment"><sp/><sp/><sp/>*<sp/>here<sp/>by<sp/>treating<sp/>the<sp/>key<sp/>as<sp/>being<sp/>an<sp/>array<sp/>of<sp/>unsigned<sp/>longs<sp/>in</highlight></codeline>
<codeline lineno="162"><highlight class="comment"><sp/><sp/><sp/>*<sp/>network<sp/>order.</highlight></codeline>
<codeline lineno="163"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i&lt;</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(sKey.keyL)/</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="bsp__msp430__defs_8h_1a06896e8c53f721507066c079052171f8" kindref="member">uint32_t</ref>);<sp/>++i)</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>sKey.keyL[i]<sp/>=<sp/><ref refid="bsp_8h_1ac317b3e903719ba02894f1710f7f2439" kindref="member">ntohl</ref>(sKey.keyL[i]);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/></highlight><highlight class="comment">/*<sp/>SMPL_SECURE<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="171"><highlight class="normal">}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="comment">/******************************************************************************</highlight></codeline>
<codeline lineno="174"><highlight class="comment"><sp/>*<sp/>@fn<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nwk_processSecurity</highlight></codeline>
<codeline lineno="175"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="176"><highlight class="comment"><sp/>*<sp/>@brief<sp/><sp/><sp/><sp/><sp/><sp/><sp/>Security<sp/>network<sp/>application<sp/>frame<sp/>handler.</highlight></codeline>
<codeline lineno="177"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="178"><highlight class="comment"><sp/>*<sp/>input<sp/>parameters</highlight></codeline>
<codeline lineno="179"><highlight class="comment"><sp/>*<sp/>@param<sp/><sp/><sp/>frame<sp/><sp/><sp/>-<sp/>pointer<sp/>to<sp/>frame<sp/>in<sp/>question</highlight></codeline>
<codeline lineno="180"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="181"><highlight class="comment"><sp/>*<sp/>output<sp/>parameters</highlight></codeline>
<codeline lineno="182"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="183"><highlight class="comment"><sp/>*<sp/>@return<sp/><sp/><sp/><sp/>Keep<sp/>frame<sp/>for<sp/>application,<sp/>release<sp/>frame,<sp/>or<sp/>replay<sp/>frame.</highlight></codeline>
<codeline lineno="184"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185" refid="nwk__security_8h_1a6c2d8220489e62c214a07b59a019e6be" refkind="member"><highlight class="normal"><ref refid="nwk__types_8h_1af223ab49f851993ce1ca1a2f8c07d588" kindref="member">fhStatus_t</ref><sp/><ref refid="nwk__security_8c_1a4b5b40b8776596294275eee51c62a6c5" kindref="member">nwk_processSecurity</ref>(<ref refid="structmrfiPacket__t" kindref="compound">mrfiPacket_t</ref><sp/>*frame)</highlight></codeline>
<codeline lineno="186"><highlight class="normal">{</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="nwk__types_8h_1a76c65417ce2e600d3c7a3c8441116357a2ba6e0c71f84e1d2ea4edbb2c789066d" kindref="member">FHS_RELEASE</ref>;</highlight></codeline>
<codeline lineno="188"><highlight class="normal">}</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight><highlight class="comment">/******************************************************************************</highlight></codeline>
<codeline lineno="191"><highlight class="comment"><sp/>*<sp/>@fn<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msg_encipher</highlight></codeline>
<codeline lineno="192"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="193"><highlight class="comment"><sp/>*<sp/>@brief<sp/><sp/><sp/><sp/><sp/><sp/><sp/>Encipher<sp/>a<sp/>message<sp/>using<sp/>the<sp/>XTEA<sp/>algorithm<sp/>and<sp/>the<sp/>modified</highlight></codeline>
<codeline lineno="194"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CTR<sp/>mode<sp/>method.</highlight></codeline>
<codeline lineno="195"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="196"><highlight class="comment"><sp/>*<sp/>input<sp/>parameters</highlight></codeline>
<codeline lineno="197"><highlight class="comment"><sp/>*<sp/>@param<sp/><sp/><sp/>msg<sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>pointer<sp/>to<sp/>message<sp/>to<sp/>encipher</highlight></codeline>
<codeline lineno="198"><highlight class="comment"><sp/>*<sp/>@param<sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>length<sp/>of<sp/>message</highlight></codeline>
<codeline lineno="199"><highlight class="comment"><sp/>*<sp/>@param<sp/><sp/><sp/>cntStart<sp/>-<sp/>pointer<sp/>to<sp/>the<sp/>counter<sp/>used<sp/>in<sp/>the<sp/>cipher<sp/>block.</highlight></codeline>
<codeline lineno="200"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="201"><highlight class="comment"><sp/>*<sp/>output<sp/>parameters</highlight></codeline>
<codeline lineno="202"><highlight class="comment"><sp/>*<sp/>@param<sp/><sp/><sp/>cntStart<sp/>-<sp/>counter<sp/>is<sp/>updated<sp/>during<sp/>encryption.</highlight></codeline>
<codeline lineno="203"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="204"><highlight class="comment"><sp/>*<sp/>@return<sp/><sp/><sp/><sp/><sp/><sp/>void</highlight></codeline>
<codeline lineno="205"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>SMPL_SECURE</highlight></codeline>
<codeline lineno="207"><highlight class="preprocessor"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>msg_encipher(<ref refid="bsp__msp430__defs_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref><sp/>*msg,<sp/><ref refid="bsp__msp430__defs_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref><sp/>len,<sp/><ref refid="bsp__msp430__defs_8h_1a06896e8c53f721507066c079052171f8" kindref="member">uint32_t</ref><sp/>*cntStart)</highlight></codeline>
<codeline lineno="208"><highlight class="normal">{</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><ref refid="bsp__msp430__defs_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref><sp/><sp/>i,<sp/>idx,<sp/>done;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><ref refid="bsp__msp430__defs_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref><sp/>*mptr<sp/>=<sp/>(<ref refid="bsp__msp430__defs_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref><sp/>*)&amp;sMsg[0];</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><ref refid="bsp__msp430__defs_8h_1a06896e8c53f721507066c079052171f8" kindref="member">uint32_t</ref><sp/>ctr;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<ref refid="bsp__msp430__defs_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>==<sp/>msg)<sp/>||<sp/>!len)</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>local<sp/>counter<sp/>from<sp/>input<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/>ctr<sp/>=<sp/>*cntStart;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/>idx<sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/>done<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>block<sp/>to<sp/>be<sp/>enciphered.<sp/>1st<sp/>32<sp/>bits<sp/>are<sp/>the<sp/>IV.<sp/>The<sp/>second</highlight></codeline>
<codeline lineno="226"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>32<sp/>bits<sp/>are<sp/>the<sp/>current<sp/>CTR<sp/>value.</highlight></codeline>
<codeline lineno="227"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>sMsg[0]<sp/>=<sp/>sIV;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/>sMsg[1]<sp/>=<sp/>ctr;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>encrypt<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>xtea_encipher();</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>increment<sp/>counter<sp/>for<sp/>next<sp/>time.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/>ctr++;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>XOR<sp/>ciphered<sp/>block<sp/>with<sp/>message<sp/>to<sp/>be<sp/>sent.<sp/>Only<sp/>operate</highlight></codeline>
<codeline lineno="235"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>up<sp/>to<sp/>and<sp/>including<sp/>the<sp/>last<sp/>message<sp/>byte<sp/>which<sp/>may<sp/>not</highlight></codeline>
<codeline lineno="236"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>be<sp/>on<sp/>a<sp/>cipher<sp/>block<sp/>boundary<sp/>(64<sp/>bits<sp/>==<sp/>8<sp/>bytes).</highlight></codeline>
<codeline lineno="237"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i&lt;</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(sMsg)<sp/>&amp;&amp;<sp/>idx&lt;len;<sp/>++i,<sp/>++idx)</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>msg[idx]<sp/>^=<sp/>mptr[i];</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(idx<sp/>&gt;=<sp/>len)</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>we&apos;re<sp/>done<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>done<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!done);</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>return<sp/>counter<sp/>value<sp/>start<sp/>for<sp/>next<sp/>time<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/>*cntStart<sp/>=<sp/>ctr;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="254"><highlight class="normal">}</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight><highlight class="comment">/******************************************************************************</highlight></codeline>
<codeline lineno="257"><highlight class="comment"><sp/>*<sp/>@fn<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msg_decipher</highlight></codeline>
<codeline lineno="258"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="259"><highlight class="comment"><sp/>*<sp/>@brief<sp/><sp/><sp/><sp/><sp/><sp/><sp/>Decipher<sp/>a<sp/>message<sp/>using<sp/>the<sp/>XTEA<sp/>algorithm<sp/>and<sp/>the<sp/>modified</highlight></codeline>
<codeline lineno="260"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CTR<sp/>mode<sp/>method.</highlight></codeline>
<codeline lineno="261"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="262"><highlight class="comment"><sp/>*<sp/>input<sp/>parameters</highlight></codeline>
<codeline lineno="263"><highlight class="comment"><sp/>*<sp/>@param<sp/><sp/><sp/>msg<sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>pointer<sp/>to<sp/>message<sp/>to<sp/>decipher</highlight></codeline>
<codeline lineno="264"><highlight class="comment"><sp/>*<sp/>@param<sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>length<sp/>of<sp/>message</highlight></codeline>
<codeline lineno="265"><highlight class="comment"><sp/>*<sp/>@param<sp/><sp/><sp/>cntStart<sp/>-<sp/>pointer<sp/>to<sp/>the<sp/>counter<sp/>used<sp/>in<sp/>the<sp/>cipher<sp/>block.</highlight></codeline>
<codeline lineno="266"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="267"><highlight class="comment"><sp/>*<sp/>output<sp/>parameters</highlight></codeline>
<codeline lineno="268"><highlight class="comment"><sp/>*<sp/>@param<sp/><sp/><sp/>cntStart<sp/>-<sp/>counter<sp/>is<sp/>updated<sp/>during<sp/>decryption.</highlight></codeline>
<codeline lineno="269"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="270"><highlight class="comment"><sp/>*<sp/>@return<sp/><sp/><sp/><sp/><sp/><sp/>void</highlight></codeline>
<codeline lineno="271"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>msg_decipher(<ref refid="bsp__msp430__defs_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref><sp/>*msg,<sp/><ref refid="bsp__msp430__defs_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref><sp/>len,<sp/><ref refid="bsp__msp430__defs_8h_1a06896e8c53f721507066c079052171f8" kindref="member">uint32_t</ref><sp/>*cntStart)</highlight></codeline>
<codeline lineno="273"><highlight class="normal">{</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/>msg_encipher(msg,<sp/>len,<sp/>cntStart);</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="277"><highlight class="normal">}</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight><highlight class="comment">/******************************************************************************</highlight></codeline>
<codeline lineno="280"><highlight class="comment"><sp/>*<sp/>@fn<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xtea_encipher</highlight></codeline>
<codeline lineno="281"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="282"><highlight class="comment"><sp/>*<sp/>@brief<sp/><sp/><sp/><sp/><sp/><sp/><sp/>XTEA<sp/>encipher<sp/>algorithm.<sp/>Calling<sp/>arguments<sp/>removed<sp/>from<sp/>public</highlight></codeline>
<codeline lineno="283"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>domain<sp/>code<sp/>and<sp/>static-scope<sp/>values<sp/>used<sp/>instead.</highlight></codeline>
<codeline lineno="284"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="285"><highlight class="comment"><sp/>*<sp/>input<sp/>parameters</highlight></codeline>
<codeline lineno="286"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="287"><highlight class="comment"><sp/>*<sp/>output<sp/>parameters</highlight></codeline>
<codeline lineno="288"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="289"><highlight class="comment"><sp/>*<sp/>@return<sp/><sp/><sp/><sp/><sp/><sp/>void</highlight></codeline>
<codeline lineno="290"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>xtea_encipher(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="292"><highlight class="normal">{</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><ref refid="bsp__msp430__defs_8h_1a06896e8c53f721507066c079052171f8" kindref="member">uint32_t</ref><sp/>v0=sMsg[0],<sp/>v1=sMsg[1];</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><ref refid="bsp__msp430__defs_8h_1a273cf69d639a59973b6019625df33e30" kindref="member">uint16_t</ref><sp/>i;</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><ref refid="bsp__msp430__defs_8h_1a06896e8c53f721507066c079052171f8" kindref="member">uint32_t</ref><sp/>sum=0,<sp/>delta=0x9E3779B9;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;<sp/>i&lt;NUM_ROUNDS;<sp/>i++)</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/>v0<sp/><sp/>+=<sp/>(((v1<sp/>&lt;&lt;<sp/>4)<sp/>^<sp/>(v1<sp/>&gt;&gt;<sp/>5))<sp/>+<sp/>v1)<sp/>^<sp/>(sum<sp/>+<sp/>sKey.keyL[sum<sp/>&amp;<sp/>3]);</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/>sum<sp/>+=<sp/>delta;</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/>v1<sp/><sp/>+=<sp/>(((v0<sp/>&lt;&lt;<sp/>4)<sp/>^<sp/>(v0<sp/>&gt;&gt;<sp/>5))<sp/>+<sp/>v0)<sp/>^<sp/>(sum<sp/>+<sp/>sKey.keyL[(sum&gt;&gt;11)<sp/>&amp;<sp/>3]);</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/>sMsg[0]=v0;</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/>sMsg[1]=v1;</highlight></codeline>
<codeline lineno="306"><highlight class="normal">}</highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight><highlight class="comment">/******************************************************************************</highlight></codeline>
<codeline lineno="309"><highlight class="comment"><sp/>*<sp/>@fn<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nwk_setSecureFrame</highlight></codeline>
<codeline lineno="310"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="311"><highlight class="comment"><sp/>*<sp/>@brief<sp/><sp/><sp/><sp/><sp/><sp/><sp/>Called<sp/>from<sp/>NWK<sp/>to<sp/>secure<sp/>a<sp/>frame.</highlight></codeline>
<codeline lineno="312"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="313"><highlight class="comment"><sp/>*<sp/>input<sp/>parameters</highlight></codeline>
<codeline lineno="314"><highlight class="comment"><sp/>*<sp/>@param<sp/><sp/><sp/>frame<sp/><sp/><sp/>-<sp/>pointer<sp/>to<sp/>frame<sp/>to<sp/>secure</highlight></codeline>
<codeline lineno="315"><highlight class="comment"><sp/>*<sp/>@param<sp/><sp/><sp/>msglen<sp/><sp/>-<sp/>length<sp/>of<sp/>message</highlight></codeline>
<codeline lineno="316"><highlight class="comment"><sp/>*<sp/>@param<sp/><sp/><sp/>ctr<sp/><sp/><sp/><sp/><sp/>-<sp/>pointer<sp/>to<sp/>the<sp/>counter<sp/>used<sp/>in<sp/>the<sp/>cipher<sp/>block.<sp/>This<sp/>will</highlight></codeline>
<codeline lineno="317"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>be<sp/>NULL<sp/>if<sp/>a<sp/>network<sp/>application<sp/>is<sp/>sending<sp/>a<sp/>frame.<sp/>Since</highlight></codeline>
<codeline lineno="318"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>these<sp/>are<sp/>not<sp/>connection-based<sp/>there<sp/>is<sp/>no<sp/>counter<sp/>sync</highlight></codeline>
<codeline lineno="319"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>issue<sp/>but<sp/>we<sp/>still<sp/>need<sp/>a<sp/>counter<sp/>value.<sp/>A<sp/>random<sp/>value</highlight></codeline>
<codeline lineno="320"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is<sp/>used.</highlight></codeline>
<codeline lineno="321"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="322"><highlight class="comment"><sp/>*<sp/>output<sp/>parameters</highlight></codeline>
<codeline lineno="323"><highlight class="comment"><sp/>*<sp/>@param<sp/><sp/><sp/>cntStart<sp/>-<sp/>counter<sp/>is<sp/>updated<sp/>during<sp/>encryption.</highlight></codeline>
<codeline lineno="324"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="325"><highlight class="comment"><sp/>*<sp/>@return<sp/><sp/><sp/><sp/><sp/><sp/>void</highlight></codeline>
<codeline lineno="326"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="nwk__security_8h_1ac2fdebf7d7f03babf9bb9921f40463b5" kindref="member">nwk_setSecureFrame</ref>(<ref refid="structmrfiPacket__t" kindref="compound">mrfiPacket_t</ref><sp/>*frame,<sp/><ref refid="bsp__msp430__defs_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref><sp/>msglen,<sp/><ref refid="bsp__msp430__defs_8h_1a06896e8c53f721507066c079052171f8" kindref="member">uint32_t</ref><sp/>*ctr)</highlight></codeline>
<codeline lineno="328"><highlight class="normal">{</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><ref refid="bsp__msp430__defs_8h_1a06896e8c53f721507066c079052171f8" kindref="member">uint32_t</ref><sp/>locCnt;</highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>an<sp/>encrypted<sp/>frame<sp/>is<sp/>to<sp/>be<sp/>sent<sp/>to<sp/>a<sp/>non-connection<sp/>based<sp/>port<sp/>use<sp/>a</highlight></codeline>
<codeline lineno="332"><highlight class="comment"><sp/><sp/><sp/>*<sp/>random<sp/>number<sp/>as<sp/>the<sp/>lsb<sp/>counter<sp/>value.<sp/>In<sp/>this<sp/>case<sp/>only<sp/>the<sp/>lsb<sp/>is<sp/>used</highlight></codeline>
<codeline lineno="333"><highlight class="comment"><sp/><sp/><sp/>*<sp/>for<sp/>a<sp/>counter<sp/>value<sp/>during<sp/>decryption.<sp/>Not<sp/>as<sp/>secure<sp/>but<sp/>there<sp/>are<sp/>still</highlight></codeline>
<codeline lineno="334"><highlight class="comment"><sp/><sp/><sp/>*<sp/>the<sp/>32<sp/>bits<sp/>in<sp/>the<sp/>IV.</highlight></codeline>
<codeline lineno="335"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/>locCnt<sp/>=<sp/>ctr<sp/>?<sp/>*ctr<sp/>:<sp/><ref refid="mrfi_8h_1a6b3e99528ed42a97268bf7049adb4d54" kindref="member">MRFI_RandomByte</ref>();</highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>place<sp/>counter<sp/>value<sp/>into<sp/>frame<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><ref refid="nwk__frame_8h_1a8f66fe4e5ecbeed97f6058055bdd2820" kindref="member">PUT_INTO_FRAME</ref>(<ref refid="mrfi_8h_1af99c7ebdeeb45566df7a3653ee9f250d" kindref="member">MRFI_P_PAYLOAD</ref>(frame),<sp/>F_SEC_CTR_OS,<sp/>(<ref refid="bsp__msp430__defs_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref>)(locCnt<sp/>&amp;<sp/>0xFF));</highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Put<sp/>MAC<sp/>value<sp/>in<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><ref refid="nwk_8c_1a368c9acf885de26f4218c8ebcf4c92f3" kindref="member">nwk_putNumObjectIntoMsg</ref>((</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)&amp;sMAC,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)(<ref refid="mrfi_8h_1af99c7ebdeeb45566df7a3653ee9f250d" kindref="member">MRFI_P_PAYLOAD</ref>(frame)+F_SEC_MAC_OS),<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="nwk__types_8h_1a7c99d18160f11776f42f077b8ee897cd" kindref="member">secMAC_t</ref>));</highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Put<sp/>FCS<sp/>value<sp/>in<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="nwk__types_8h_1a807b0bdbf0ef0bb8a92bec1eeb688b35" kindref="member">secFCS_t</ref><sp/>fcs<sp/>=<sp/>calcFCS(<ref refid="mrfi_8h_1af99c7ebdeeb45566df7a3653ee9f250d" kindref="member">MRFI_P_PAYLOAD</ref>(frame)+F_SEC_MAC_OS,<sp/>msglen+</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="nwk__types_8h_1a7c99d18160f11776f42f077b8ee897cd" kindref="member">secMAC_t</ref>));</highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="nwk_8c_1a368c9acf885de26f4218c8ebcf4c92f3" kindref="member">nwk_putNumObjectIntoMsg</ref>((</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)&amp;fcs,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)(<ref refid="mrfi_8h_1af99c7ebdeeb45566df7a3653ee9f250d" kindref="member">MRFI_P_PAYLOAD</ref>(frame)+F_SEC_ICHK_OS),<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="nwk__types_8h_1a807b0bdbf0ef0bb8a92bec1eeb688b35" kindref="member">secFCS_t</ref>));</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Encrypt<sp/>frame<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/>msg_encipher(<ref refid="mrfi_8h_1af99c7ebdeeb45566df7a3653ee9f250d" kindref="member">MRFI_P_PAYLOAD</ref>(frame)+F_SEC_ICHK_OS,<sp/>msglen+</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="nwk__types_8h_1a7c99d18160f11776f42f077b8ee897cd" kindref="member">secMAC_t</ref>)+</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="nwk__types_8h_1a807b0bdbf0ef0bb8a92bec1eeb688b35" kindref="member">secFCS_t</ref>),<sp/>&amp;locCnt);</highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>the<sp/>Encryption<sp/>bit<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><ref refid="nwk__frame_8h_1a8f66fe4e5ecbeed97f6058055bdd2820" kindref="member">PUT_INTO_FRAME</ref>(<ref refid="mrfi_8h_1af99c7ebdeeb45566df7a3653ee9f250d" kindref="member">MRFI_P_PAYLOAD</ref>(frame),<sp/><ref refid="nwk__frame_8h_1a496e790aeb0fd6cbaa710fc5f75299c4" kindref="member">F_ENCRYPT_OS</ref>,<sp/><ref refid="nwk__frame_8h_1ab7bd35af33ef2ddf86e5927a31dfedf6" kindref="member">F_ENCRYPT_OS_MSK</ref>);</highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Update<sp/>the<sp/>counter<sp/>if<sp/>it<sp/>was<sp/>a<sp/>&quot;real&quot;<sp/>counter.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ctr)</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/>*ctr<sp/>=<sp/>locCnt;</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="364"><highlight class="normal">}</highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight><highlight class="comment">/******************************************************************************</highlight></codeline>
<codeline lineno="367"><highlight class="comment"><sp/>*<sp/>@fn<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>calcFCS</highlight></codeline>
<codeline lineno="368"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="369"><highlight class="comment"><sp/>*<sp/>@brief<sp/><sp/><sp/><sp/><sp/><sp/><sp/>Calculate<sp/>the<sp/>frame<sp/>check<sp/>sequence.<sp/>Currently<sp/>it&apos;s<sp/>just<sp/>a</highlight></codeline>
<codeline lineno="370"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cumulative<sp/>XOR<sp/>of<sp/>each<sp/>byte<sp/>starting<sp/>with<sp/>the<sp/>MAC<sp/>byte.<sp/>The</highlight></codeline>
<codeline lineno="371"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FCS<sp/>is<sp/>placed<sp/>in<sp/>front<sp/>of<sp/>the<sp/>MAC<sp/>after<sp/>the<sp/>counter<sp/>hint<sp/>and<sp/>is</highlight></codeline>
<codeline lineno="372"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>included<sp/>in<sp/>the<sp/>encryption.</highlight></codeline>
<codeline lineno="373"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="374"><highlight class="comment"><sp/>*<sp/>input<sp/>parameters</highlight></codeline>
<codeline lineno="375"><highlight class="comment"><sp/>*<sp/>@param<sp/><sp/><sp/>msg<sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>pointer<sp/>to<sp/>message</highlight></codeline>
<codeline lineno="376"><highlight class="comment"><sp/>*<sp/>@param<sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>length<sp/>of<sp/>message</highlight></codeline>
<codeline lineno="377"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="378"><highlight class="comment"><sp/>*<sp/>output<sp/>parameters</highlight></codeline>
<codeline lineno="379"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="380"><highlight class="comment"><sp/>*<sp/>@return<sp/><sp/><sp/><sp/><sp/><sp/>Returns<sp/>the<sp/>FCS<sp/>using<sp/>the<sp/>typedef.</highlight></codeline>
<codeline lineno="381"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="nwk__types_8h_1a807b0bdbf0ef0bb8a92bec1eeb688b35" kindref="member">secFCS_t</ref><sp/>calcFCS(<ref refid="bsp__msp430__defs_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref><sp/>*msg,<sp/><ref refid="bsp__msp430__defs_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref><sp/>len)</highlight></codeline>
<codeline lineno="383"><highlight class="normal">{</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><ref refid="bsp__msp430__defs_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref><sp/><sp/>i;</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><ref refid="nwk__types_8h_1a807b0bdbf0ef0bb8a92bec1eeb688b35" kindref="member">secFCS_t</ref><sp/>result<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i&lt;len;<sp/>++i)</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>^=<sp/>*(msg+i);</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="393"><highlight class="normal">}</highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight><highlight class="comment">/******************************************************************************</highlight></codeline>
<codeline lineno="396"><highlight class="comment"><sp/>*<sp/>@fn<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nwk_getSecureFrame</highlight></codeline>
<codeline lineno="397"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="398"><highlight class="comment"><sp/>*<sp/>@brief<sp/><sp/><sp/><sp/><sp/><sp/><sp/>Called<sp/>from<sp/>NWK<sp/>to<sp/>get<sp/>a<sp/>secure<sp/>a<sp/>frame<sp/>and<sp/>decrypt.</highlight></codeline>
<codeline lineno="399"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="400"><highlight class="comment"><sp/>*<sp/>input<sp/>parameters</highlight></codeline>
<codeline lineno="401"><highlight class="comment"><sp/>*<sp/>@param<sp/><sp/><sp/>frame<sp/><sp/><sp/><sp/>-<sp/>pointer<sp/>to<sp/>frame<sp/>containing<sp/>encrypted<sp/>message</highlight></codeline>
<codeline lineno="402"><highlight class="comment"><sp/>*<sp/>@param<sp/><sp/><sp/>msglen<sp/><sp/><sp/>-<sp/>length<sp/>of<sp/>message</highlight></codeline>
<codeline lineno="403"><highlight class="comment"><sp/>*<sp/>@param<sp/><sp/><sp/>ctr<sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>pointer<sp/>to<sp/>the<sp/>counter<sp/>used<sp/>in<sp/>the<sp/>cipher<sp/>block.<sp/>This<sp/>will</highlight></codeline>
<codeline lineno="404"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>be<sp/>NULL<sp/>if<sp/>a<sp/>network<sp/>applicaiton<sp/>is<sp/>getting<sp/>a<sp/>frame.<sp/>Since</highlight></codeline>
<codeline lineno="405"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>these<sp/>are<sp/>not<sp/>connection-nbased<sp/>there<sp/>is<sp/>no<sp/>counter<sp/>sync</highlight></codeline>
<codeline lineno="406"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>issue<sp/>but<sp/>we<sp/>still<sp/>need<sp/>a<sp/>counter<sp/>value.</highlight></codeline>
<codeline lineno="407"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="408"><highlight class="comment"><sp/>*<sp/>output<sp/>parameters</highlight></codeline>
<codeline lineno="409"><highlight class="comment"><sp/>*<sp/>@param<sp/><sp/><sp/>cntStart<sp/>-<sp/>counter<sp/>is<sp/>updated<sp/>during<sp/>decryption.<sp/>If<sp/>decryption<sp/>fails</highlight></codeline>
<codeline lineno="410"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this<sp/>value<sp/>is<sp/>not<sp/>changed.</highlight></codeline>
<codeline lineno="411"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="412"><highlight class="comment"><sp/>*<sp/>@return<sp/><sp/><sp/><sp/><sp/><sp/>Returns<sp/>non-zero<sp/>if<sp/>frame<sp/>decryption<sp/>is<sp/>valid,<sp/>otherwise<sp/>returns<sp/>0.</highlight></codeline>
<codeline lineno="413"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"><ref refid="bsp__msp430__defs_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref><sp/><ref refid="nwk__security_8h_1a1742815b0478bc18d18e9ac6c437046b" kindref="member">nwk_getSecureFrame</ref>(<ref refid="structmrfiPacket__t" kindref="compound">mrfiPacket_t</ref><sp/>*frame,<sp/><ref refid="bsp__msp430__defs_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref><sp/>msglen,<sp/><ref refid="bsp__msp430__defs_8h_1a06896e8c53f721507066c079052171f8" kindref="member">uint32_t</ref><sp/>*ctr)</highlight></codeline>
<codeline lineno="415"><highlight class="normal">{</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><ref refid="bsp__msp430__defs_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref><sp/><sp/>rc<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><ref refid="bsp__msp430__defs_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref><sp/><sp/>done<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><ref refid="bsp__msp430__defs_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref><sp/><sp/>cntHint<sp/>=<sp/><ref refid="nwk__frame_8h_1afd30e32e5edd7f396737e4a33dae677d" kindref="member">GET_FROM_FRAME</ref>(<ref refid="mrfi_8h_1af99c7ebdeeb45566df7a3653ee9f250d" kindref="member">MRFI_P_PAYLOAD</ref>(frame),<sp/>F_SEC_CTR_OS);</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><ref refid="bsp__msp430__defs_8h_1a06896e8c53f721507066c079052171f8" kindref="member">uint32_t</ref><sp/>locCnt,<sp/>frameCnt;</highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Construct<sp/>proposed<sp/>CTR<sp/>values<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Just<sp/>like<sp/>encryption,<sp/>we<sp/>may<sp/>be<sp/>talking<sp/>to<sp/>a<sp/>non-connection<sp/>based</highlight></codeline>
<codeline lineno="424"><highlight class="comment"><sp/><sp/><sp/>*<sp/>peer<sp/>in<sp/>which<sp/>case<sp/>the<sp/>counter<sp/>value<sp/>is<sp/>represented<sp/>by<sp/>the<sp/>lsb<sp/>byte</highlight></codeline>
<codeline lineno="425"><highlight class="comment"><sp/><sp/><sp/>*<sp/>conveyed<sp/>in<sp/>the<sp/>frame.</highlight></codeline>
<codeline lineno="426"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/>locCnt<sp/>=<sp/>ctr<sp/>?<sp/>*ctr<sp/>:<sp/>cntHint;</highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/>frameCnt<sp/>=<sp/>(locCnt<sp/>&amp;<sp/>0xFFFFFF00)<sp/>+<sp/>cntHint;</highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>See<sp/>if<sp/>counters<sp/>match<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(locCnt<sp/>==<sp/>frameCnt)</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>When<sp/>the<sp/>counters<sp/>appear<sp/>to<sp/>match<sp/>is<sp/>the<sp/>only<sp/>time<sp/>we<sp/>actually<sp/>decipher</highlight></codeline>
<codeline lineno="437"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>the<sp/>message.<sp/>It<sp/>is<sp/>the<sp/>only<sp/>time<sp/>we<sp/>can<sp/>do<sp/>so<sp/>since<sp/>out-of-sync<sp/>lsb<sp/>counter</highlight></codeline>
<codeline lineno="438"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>values<sp/>guarantees<sp/>that<sp/>something<sp/>is<sp/>wrong<sp/>somewhere.<sp/>Decryption<sp/>is<sp/>successful</highlight></codeline>
<codeline lineno="439"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>only<sp/>if<sp/>the<sp/>MAC<sp/>and<sp/>FCS<sp/>values<sp/>match.<sp/>The<sp/>message<sp/>is<sp/>left<sp/>as-is<sp/>after<sp/>the</highlight></codeline>
<codeline lineno="440"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>decipher<sp/>attempt.<sp/>Either<sp/>it<sp/>appears<sp/>valid<sp/>or<sp/>is<sp/>doesn&apos;t<sp/>and<sp/>is<sp/>discarded.</highlight></codeline>
<codeline lineno="441"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>There<sp/>is<sp/>no<sp/>recovery<sp/>attempt<sp/>if<sp/>the<sp/>counters<sp/>match<sp/>but<sp/>the<sp/>MAC<sp/>or<sp/>FCS<sp/>do</highlight></codeline>
<codeline lineno="442"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>not.<sp/>It<sp/>is<sp/>considered<sp/>a<sp/>rogue<sp/>message.</highlight></codeline>
<codeline lineno="443"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>msg_decipher(<ref refid="mrfi_8h_1af99c7ebdeeb45566df7a3653ee9f250d" kindref="member">MRFI_P_PAYLOAD</ref>(frame)+F_SEC_ICHK_OS,<sp/>msglen-1,<sp/>&amp;locCnt);</highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Get<sp/>MAC<sp/>and<sp/>make<sp/>sure<sp/>it<sp/>matches.<sp/>A<sp/>failure<sp/>can<sp/>occur<sp/>if<sp/>a<sp/>replayed<sp/>frame<sp/>happens</highlight></codeline>
<codeline lineno="447"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>to<sp/>have<sp/>the<sp/>correct<sp/>counter<sp/>sync<sp/>value<sp/>but<sp/>was<sp/>encoded<sp/>with<sp/>the<sp/>wrong<sp/>complete</highlight></codeline>
<codeline lineno="448"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>counter<sp/>value.<sp/>Otherwise<sp/>the<sp/>MAC<sp/>values<sp/>must<sp/>match<sp/>when<sp/>the<sp/>counter<sp/>values<sp/>are<sp/>equal.</highlight></codeline>
<codeline lineno="449"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="nwk__types_8h_1a7c99d18160f11776f42f077b8ee897cd" kindref="member">secMAC_t</ref><sp/>mac;</highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="nwk_8c_1aed7d6002dcd83bad8b79ef133ec9779f" kindref="member">nwk_getNumObjectFromMsg</ref>((</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)(<ref refid="mrfi_8h_1af99c7ebdeeb45566df7a3653ee9f250d" kindref="member">MRFI_P_PAYLOAD</ref>(frame)+F_SEC_MAC_OS),<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)&amp;mac,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="nwk__types_8h_1a7c99d18160f11776f42f077b8ee897cd" kindref="member">secMAC_t</ref>));</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mac<sp/>!=<sp/>sMAC)</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rc<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>FCS<sp/>check...<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="nwk__types_8h_1a807b0bdbf0ef0bb8a92bec1eeb688b35" kindref="member">secFCS_t</ref><sp/>fcs;</highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="nwk_8c_1aed7d6002dcd83bad8b79ef133ec9779f" kindref="member">nwk_getNumObjectFromMsg</ref>((</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)(<ref refid="mrfi_8h_1af99c7ebdeeb45566df7a3653ee9f250d" kindref="member">MRFI_P_PAYLOAD</ref>(frame)+F_SEC_ICHK_OS),<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)&amp;fcs,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="nwk__types_8h_1a807b0bdbf0ef0bb8a92bec1eeb688b35" kindref="member">secFCS_t</ref>));</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fcs<sp/>!=<sp/>calcFCS(<ref refid="mrfi_8h_1af99c7ebdeeb45566df7a3653ee9f250d" kindref="member">MRFI_P_PAYLOAD</ref>(frame)+F_SEC_MAC_OS,<sp/>msglen-1-</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="nwk__types_8h_1a7c99d18160f11776f42f077b8ee897cd" kindref="member">secMAC_t</ref>)))</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rc<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>we&apos;re<sp/>done.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>done<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Uh<sp/>oh.<sp/>Counters<sp/>don&apos;t<sp/>match.<sp/>Try<sp/>and<sp/>resync.<sp/>We<sp/>need<sp/>to<sp/>distinguish<sp/>among</highlight></codeline>
<codeline lineno="477"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>missed<sp/>frames,<sp/>duplicates<sp/>and<sp/>rogues<sp/>plus<sp/>account<sp/>for<sp/>counter<sp/>wrap.</highlight></codeline>
<codeline lineno="478"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(frameCnt<sp/>&gt;<sp/>locCnt)</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>frameCnt<sp/>is<sp/>bigger.<sp/>Second<sp/>part<sp/>of<sp/>test<sp/>below<sp/>takes<sp/>care<sp/>of</highlight></codeline>
<codeline lineno="482"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>the<sp/>unlikely<sp/>case<sp/>of<sp/>a<sp/>complete<sp/>counter<sp/>wrap<sp/>(msb&apos;s<sp/>all<sp/>0)<sp/>in</highlight></codeline>
<codeline lineno="483"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>which<sp/>case<sp/>the<sp/>test<sp/>will<sp/>incorrectly<sp/>fail<sp/>when<sp/>the<sp/>count<sp/>is</highlight></codeline>
<codeline lineno="484"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>actually<sp/>within<sp/>the<sp/>(wrapped)<sp/>window.<sp/>#ifdef&apos;ed<sp/>to<sp/>avoid<sp/>compiler</highlight></codeline>
<codeline lineno="485"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>warning<sp/>in<sp/>case<sp/>user<sp/>sets<sp/>CNT_WINDOW<sp/>to<sp/>0<sp/>(pointless<sp/>comparison<sp/>of</highlight></codeline>
<codeline lineno="486"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>unsigned<sp/>value).</highlight></codeline>
<codeline lineno="487"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(((frameCnt-CTR_WINDOW)<sp/>&lt;=<sp/>locCnt)</highlight></codeline>
<codeline lineno="489"><highlight class="normal">#</highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>CTR_WINDOW<sp/>&gt;<sp/>0</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>(frameCnt<sp/>&lt;<sp/>CTR_WINDOW)</highlight></codeline>
<codeline lineno="491"><highlight class="normal">#endif</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Value<sp/>within<sp/>window.<sp/>We<sp/>probably<sp/>missed<sp/>something.<sp/>Adjust<sp/>and<sp/>decipher.</highlight></codeline>
<codeline lineno="495"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>If<sp/>locCnt<sp/>is<sp/>less<sp/>because<sp/>it<sp/>wrapped<sp/>and<sp/>frameCnt<sp/>didn&apos;t<sp/>it<sp/>means<sp/>that</highlight></codeline>
<codeline lineno="496"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>it&apos;s<sp/>a<sp/>duplicate<sp/>or<sp/>late<sp/>frame.<sp/>In<sp/>that<sp/>case<sp/>the<sp/>following<sp/>will<sp/>lead<sp/>to</highlight></codeline>
<codeline lineno="497"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>a<sp/>decryption<sp/>that<sp/>fails<sp/>sanity<sp/>checks<sp/>which<sp/>is<sp/>OK<sp/>because<sp/>the<sp/>frame<sp/>will</highlight></codeline>
<codeline lineno="498"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>be<sp/>correctly<sp/>rejected.</highlight></codeline>
<codeline lineno="499"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>locCnt<sp/>=<sp/>frameCnt;</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>It&apos;s<sp/>either<sp/>a<sp/>rogue<sp/>or<sp/>a<sp/>really<sp/>old<sp/>duplicate<sp/>packet.<sp/>In<sp/>either<sp/>case</highlight></codeline>
<codeline lineno="505"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>we<sp/>dismiss<sp/>the<sp/>frame.</highlight></codeline>
<codeline lineno="506"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rc<sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>done<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>locCnt<sp/>is<sp/>bigger.<sp/>The<sp/>only<sp/>way<sp/>the<sp/>frame<sp/>can<sp/>be<sp/>valid<sp/>is<sp/>if<sp/>the</highlight></codeline>
<codeline lineno="514"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>counter<sp/>wrapped<sp/>causing<sp/>frameCnt<sp/>to<sp/>appear<sp/>to<sp/>be<sp/>smaller.<sp/>Wrap<sp/>the</highlight></codeline>
<codeline lineno="515"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>counter<sp/>and<sp/>decrypt.<sp/>If<sp/>the<sp/>frame<sp/>isn&apos;t<sp/>valid,<sp/>i.e.,<sp/>it&apos;s<sp/>late,</highlight></codeline>
<codeline lineno="516"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>a<sp/>duplicate,<sp/>or<sp/>a<sp/>rogue,<sp/>the<sp/>decryption<sp/>will<sp/>fail<sp/>sanity<sp/>checks<sp/>and</highlight></codeline>
<codeline lineno="517"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>the<sp/>frame<sp/>will<sp/>be<sp/>correctly<sp/>rejected.<sp/>The<sp/>following<sp/>arithmetic<sp/>works</highlight></codeline>
<codeline lineno="518"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>correctly<sp/>without<sp/>a<sp/>special<sp/>test<sp/>for<sp/>the<sp/>complete<sp/>counter<sp/>wrap<sp/>case.</highlight></codeline>
<codeline lineno="519"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>frameCnt<sp/>+=<sp/>0x100;<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>wrap<sp/>the<sp/>hint-based<sp/>counter<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(((frameCnt-CTR_WINDOW)<sp/>&lt;=<sp/>locCnt))</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>An<sp/>lsb<sp/>wrap<sp/>but<sp/>still<sp/>within<sp/>window.<sp/>We<sp/>probably<sp/>missed<sp/>something.</highlight></codeline>
<codeline lineno="524"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Adjust<sp/>(with<sp/>wrap)<sp/>and<sp/>decrypt.</highlight></codeline>
<codeline lineno="525"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>locCnt<sp/>=<sp/>frameCnt;</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>rogue<sp/>frame<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rc<sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>done<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!done);</highlight></codeline>
<codeline lineno="537"><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ctr<sp/>&amp;&amp;<sp/>rc)</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Only<sp/>update<sp/>the<sp/>counter<sp/>if<sp/>the<sp/>count<sp/>was<sp/>a<sp/>&quot;real&quot;<sp/>one<sp/>and<sp/>the</highlight></codeline>
<codeline lineno="541"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>decryption<sp/>succeeded.</highlight></codeline>
<codeline lineno="542"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/>*ctr<sp/>=<sp/>locCnt;</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="545"><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rc;</highlight></codeline>
<codeline lineno="547"><highlight class="normal">}</highlight></codeline>
<codeline lineno="548"><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/></highlight><highlight class="comment">/*<sp/>SMPL_SECURE<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/francispapineau/Documents/4th year project/Source Code/Black-Box-Mouse-Interface/Original Code/V2.2/simpliciti/Components/nwk_applications/nwk_security.c"/>
  </compounddef>
</doxygen>
