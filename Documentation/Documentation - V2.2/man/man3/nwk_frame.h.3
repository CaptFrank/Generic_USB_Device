.TH "Original Code/V2.2/simpliciti/Components/nwk/nwk_frame.h" 3 "Sun Jun 16 2013" "Version VER 0.0" "Chronos Ti - Original Firmware" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Original Code/V2.2/simpliciti/Components/nwk/nwk_frame.h \- 
.SH SYNOPSIS
.br
.PP
.SS "Data Structures"

.in +1c
.ti -1c
.RI "struct \fBsigInfo_t\fP"
.br
.ti -1c
.RI "struct \fBframeInfo_t\fP"
.br
.in -1c
.SS "Defines"

.in +1c
.ti -1c
.RI "#define \fBF_PORT_OS\fP   0"
.br
.ti -1c
.RI "#define \fBF_PORT_OS_MSK\fP   (0x3F)"
.br
.ti -1c
.RI "#define \fBF_ENCRYPT_OS\fP   0"
.br
.ti -1c
.RI "#define \fBF_ENCRYPT_OS_MSK\fP   (0x40)"
.br
.ti -1c
.RI "#define \fBF_FWD_FRAME\fP   0"
.br
.ti -1c
.RI "#define \fBF_FWD_FRAME_MSK\fP   (0x80)"
.br
.ti -1c
.RI "#define \fBF_RX_TYPE\fP   1"
.br
.ti -1c
.RI "#define \fBF_RX_TYPE_MSK\fP   (0x40)"
.br
.ti -1c
.RI "#define \fBF_ACK_REQ\fP   1"
.br
.ti -1c
.RI "#define \fBF_ACK_REQ_MSK\fP   (0x80)"
.br
.ti -1c
.RI "#define \fBF_ACK_RPLY\fP   1"
.br
.ti -1c
.RI "#define \fBF_ACK_RPLY_MSK\fP   (0x08)"
.br
.ti -1c
.RI "#define \fBF_TX_DEVICE\fP   1"
.br
.ti -1c
.RI "#define \fBF_TX_DEVICE_MSK\fP   (0x30)"
.br
.ti -1c
.RI "#define \fBF_HOP_COUNT\fP   1"
.br
.ti -1c
.RI "#define \fBF_HOP_COUNT_MSK\fP   (0x07)"
.br
.ti -1c
.RI "#define \fBF_TRACTID_OS\fP   2"
.br
.ti -1c
.RI "#define \fBF_TRACTID_OS_MSK\fP   (0xFF)"
.br
.ti -1c
.RI "#define \fBSMPL_NWK_HDR_SIZE\fP   3"
.br
.ti -1c
.RI "#define \fBF_SECURE_OS\fP   0"
.br
.ti -1c
.RI "#define \fBF_APP_PAYLOAD_OS\fP   (\fBSMPL_NWK_HDR_SIZE\fP+\fBF_SECURE_OS\fP)"
.br
.ti -1c
.RI "#define \fBF_RX_TYPE_USER_CTL\fP   0x00    /* does not poll\&.\&.\&. */"
.br
.ti -1c
.RI "#define \fBF_RX_TYPE_POLLS\fP   0x40    /* polls for held messages */"
.br
.ti -1c
.RI "#define \fBF_ACK_REQ_TYPE\fP   0x80"
.br
.ti -1c
.RI "#define \fBF_ACK_RPLY_TYPE\fP   0x08"
.br
.ti -1c
.RI "#define \fBF_FRAME_FWD_TYPE\fP   0x80"
.br
.ti -1c
.RI "#define \fBF_FRAME_ENCRYPT_TYPE\fP   0x40"
.br
.ti -1c
.RI "#define \fBF_TX_DEVICE_ED\fP   0x00    /* End Device */"
.br
.ti -1c
.RI "#define \fBF_TX_DEVICE_RE\fP   0x10    /* Range Extender */"
.br
.ti -1c
.RI "#define \fBF_TX_DEVICE_AP\fP   0x20    /* Access Point */"
.br
.ti -1c
.RI "#define \fBGET_FROM_FRAME\fP(b, f)   ((b)[f] & (f##_MSK))"
.br
.ti -1c
.RI "#define \fBPUT_INTO_FRAME\fP(b, f, v)   do {(b)[f] = ((b)[f] & ~(f##_MSK)) | (v); } while(0)"
.br
.ti -1c
.RI "#define \fBFI_AVAILABLE\fP   0   /* entry available for use */"
.br
.ti -1c
.RI "#define \fBFI_INUSE_UNTIL_DEL\fP   1   /* in use\&. will be explicitly reclaimed */"
.br
.ti -1c
.RI "#define \fBFI_INUSE_UNTIL_TX\fP   2   /* in use\&. will be reclaimed after Tx */"
.br
.ti -1c
.RI "#define \fBFI_INUSE_UNTIL_FWD\fP   3   /* in use until forwarded by AP */"
.br
.ti -1c
.RI "#define \fBFI_INUSE_TRANSITION\fP   4   /* being retrieved\&. do not delete in Rx \fBISR\fP thread\&. */"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "\fBframeInfo_t\fP * \fBnwk_buildFrame\fP (\fBuint8_t\fP, \fBuint8_t\fP *msg, \fBuint8_t\fP len, \fBuint8_t\fP hops)"
.br
.ti -1c
.RI "void \fBnwk_receiveFrame\fP (void)"
.br
.ti -1c
.RI "void \fBnwk_frameInit\fP (\fBuint8_t\fP(*)(\fBlinkID_t\fP))"
.br
.ti -1c
.RI "\fBsmplStatus_t\fP \fBnwk_retrieveFrame\fP (\fBrcvContext_t\fP *, \fBuint8_t\fP *, \fBuint8_t\fP *, \fBaddr_t\fP *, \fBuint8_t\fP *)"
.br
.ti -1c
.RI "\fBsmplStatus_t\fP \fBnwk_sendFrame\fP (\fBframeInfo_t\fP *, \fBuint8_t\fP txOption)"
.br
.ti -1c
.RI "\fBframeInfo_t\fP * \fBnwk_getSandFFrame\fP (\fBmrfiPacket_t\fP *, \fBuint8_t\fP)"
.br
.ti -1c
.RI "\fBuint8_t\fP \fBnwk_getMyRxType\fP (void)"
.br
.ti -1c
.RI "void \fBnwk_SendEmptyPollRspFrame\fP (\fBmrfiPacket_t\fP *)"
.br
.ti -1c
.RI "void \fBnwk_replayFrame\fP (\fBframeInfo_t\fP *)"
.br
.in -1c
.SH "Define Documentation"
.PP 
.SS "#define \fBF_ACK_REQ\fP   1"
.PP
Definition at line 52 of file nwk_frame\&.h\&.
.SS "#define \fBF_ACK_REQ_MSK\fP   (0x80)"
.PP
Definition at line 53 of file nwk_frame\&.h\&.
.SS "#define \fBF_ACK_REQ_TYPE\fP   0x80"
.PP
Definition at line 87 of file nwk_frame\&.h\&.
.SS "#define \fBF_ACK_RPLY\fP   1"
.PP
Definition at line 54 of file nwk_frame\&.h\&.
.SS "#define \fBF_ACK_RPLY_MSK\fP   (0x08)"
.PP
Definition at line 55 of file nwk_frame\&.h\&.
.SS "#define \fBF_ACK_RPLY_TYPE\fP   0x08"
.PP
Definition at line 88 of file nwk_frame\&.h\&.
.SS "#define \fBF_APP_PAYLOAD_OS\fP   (\fBSMPL_NWK_HDR_SIZE\fP+\fBF_SECURE_OS\fP)"
.PP
Definition at line 81 of file nwk_frame\&.h\&.
.SS "#define \fBF_ENCRYPT_OS\fP   0"
.PP
Definition at line 46 of file nwk_frame\&.h\&.
.SS "#define \fBF_ENCRYPT_OS_MSK\fP   (0x40)"
.PP
Definition at line 47 of file nwk_frame\&.h\&.
.SS "#define \fBF_FRAME_ENCRYPT_TYPE\fP   0x40"
.PP
Definition at line 90 of file nwk_frame\&.h\&.
.SS "#define \fBF_FRAME_FWD_TYPE\fP   0x80"
.PP
Definition at line 89 of file nwk_frame\&.h\&.
.SS "#define \fBF_FWD_FRAME\fP   0"
.PP
Definition at line 48 of file nwk_frame\&.h\&.
.SS "#define \fBF_FWD_FRAME_MSK\fP   (0x80)"
.PP
Definition at line 49 of file nwk_frame\&.h\&.
.SS "#define \fBF_HOP_COUNT\fP   1"
.PP
Definition at line 58 of file nwk_frame\&.h\&.
.SS "#define \fBF_HOP_COUNT_MSK\fP   (0x07)"
.PP
Definition at line 59 of file nwk_frame\&.h\&.
.SS "#define \fBF_PORT_OS\fP   0"
.PP
Definition at line 44 of file nwk_frame\&.h\&.
.SS "#define \fBF_PORT_OS_MSK\fP   (0x3F)"
.PP
Definition at line 45 of file nwk_frame\&.h\&.
.SS "#define \fBF_RX_TYPE\fP   1"
.PP
Definition at line 50 of file nwk_frame\&.h\&.
.SS "#define \fBF_RX_TYPE_MSK\fP   (0x40)"
.PP
Definition at line 51 of file nwk_frame\&.h\&.
.SS "#define \fBF_RX_TYPE_POLLS\fP   0x40    /* polls for held messages */"
.PP
Definition at line 85 of file nwk_frame\&.h\&.
.SS "#define \fBF_RX_TYPE_USER_CTL\fP   0x00    /* does not poll\&.\&.\&. */"
.PP
Definition at line 84 of file nwk_frame\&.h\&.
.SS "#define \fBF_SECURE_OS\fP   0"
.PP
Definition at line 77 of file nwk_frame\&.h\&.
.SS "#define \fBF_TRACTID_OS\fP   2"
.PP
Definition at line 60 of file nwk_frame\&.h\&.
.SS "#define \fBF_TRACTID_OS_MSK\fP   (0xFF)"
.PP
Definition at line 61 of file nwk_frame\&.h\&.
.SS "#define \fBF_TX_DEVICE\fP   1"
.PP
Definition at line 56 of file nwk_frame\&.h\&.
.SS "#define \fBF_TX_DEVICE_AP\fP   0x20    /* Access Point */"
.PP
Definition at line 95 of file nwk_frame\&.h\&.
.SS "#define \fBF_TX_DEVICE_ED\fP   0x00    /* End Device */"
.PP
Definition at line 93 of file nwk_frame\&.h\&.
.SS "#define \fBF_TX_DEVICE_MSK\fP   (0x30)"
.PP
Definition at line 57 of file nwk_frame\&.h\&.
.SS "#define \fBF_TX_DEVICE_RE\fP   0x10    /* Range Extender */"
.PP
Definition at line 94 of file nwk_frame\&.h\&.
.SS "#define \fBFI_AVAILABLE\fP   0   /* entry available for use */"
.PP
Definition at line 109 of file nwk_frame\&.h\&.
.SS "#define \fBFI_INUSE_TRANSITION\fP   4   /* being retrieved\&. do not delete in Rx \fBISR\fP thread\&. */"
.PP
Definition at line 113 of file nwk_frame\&.h\&.
.SS "#define \fBFI_INUSE_UNTIL_DEL\fP   1   /* in use\&. will be explicitly reclaimed */"
.PP
Definition at line 110 of file nwk_frame\&.h\&.
.SS "#define \fBFI_INUSE_UNTIL_FWD\fP   3   /* in use until forwarded by AP */"
.PP
Definition at line 112 of file nwk_frame\&.h\&.
.SS "#define \fBFI_INUSE_UNTIL_TX\fP   2   /* in use\&. will be reclaimed after Tx */"
.PP
Definition at line 111 of file nwk_frame\&.h\&.
.SS "#define \fBGET_FROM_FRAME\fP(b, f)   ((b)[f] & (f##_MSK))"
.PP
Definition at line 98 of file nwk_frame\&.h\&.
.SS "#define \fBPUT_INTO_FRAME\fP(b, f, v)   do {(b)[f] = ((b)[f] & ~(f##_MSK)) | (v); } while(0)"
.PP
Definition at line 103 of file nwk_frame\&.h\&.
.SS "#define \fBSMPL_NWK_HDR_SIZE\fP   3"
.PP
Definition at line 62 of file nwk_frame\&.h\&.
.SH "Function Documentation"
.PP 
.SS "\fBframeInfo_t\fP* \fBnwk_buildFrame\fP (\fBuint8_t\fP, \fBuint8_t\fP *msg, \fBuint8_t\fPlen, \fBuint8_t\fPhops)"
.PP
Definition at line 183 of file nwk_frame\&.c\&.
.SS "void \fBnwk_frameInit\fP (\fBuint8_t\fP(*)(\fBlinkID_t\fP))"
.PP
Definition at line 126 of file nwk_frame\&.c\&.
.SS "\fBuint8_t\fP \fBnwk_getMyRxType\fP (void)"
.PP
Definition at line 685 of file nwk_frame\&.c\&.
.SS "\fBframeInfo_t\fP* \fBnwk_getSandFFrame\fP (\fBmrfiPacket_t\fP *, \fBuint8_t\fP)"
.SS "void \fBnwk_receiveFrame\fP (void)"
.SS "void \fBnwk_replayFrame\fP (\fBframeInfo_t\fP *)"
.PP
Definition at line 768 of file nwk_frame\&.c\&.
.SS "\fBsmplStatus_t\fP \fBnwk_retrieveFrame\fP (\fBrcvContext_t\fP *, \fBuint8_t\fP *, \fBuint8_t\fP *, \fBaddr_t\fP *, \fBuint8_t\fP *)"
.SS "void \fBnwk_SendEmptyPollRspFrame\fP (\fBmrfiPacket_t\fP *)"
.SS "\fBsmplStatus_t\fP \fBnwk_sendFrame\fP (\fBframeInfo_t\fP *, \fBuint8_t\fPtxOption)"
.PP
Definition at line 646 of file nwk_frame\&.c\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for Chronos Ti - Original Firmware from the source code\&.
