.TH "Original Code/V2.2/simpliciti/Components/bsp/bsp.h" 3 "Sun Jun 16 2013" "Version VER 0.0" "Chronos Ti - Original Firmware" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Original Code/V2.2/simpliciti/Components/bsp/bsp.h \- 
.SH SYNOPSIS
.br
.PP
\fC#include 'bsp_board_defs\&.h'\fP
.br
\fC#include 'bsp_macros\&.h'\fP
.br

.SS "Defines"

.in +1c
.ti -1c
.RI "#define \fBBSP\fP"
.br
.ti -1c
.RI "#define \fBBSP_VER\fP   100  /* \fBBSP\fP version 1\&.00a */"
.br
.ti -1c
.RI "#define \fBBSP_SUBVER\fP   a"
.br
.ti -1c
.RI "#define \fBBSP_CLOCK_MHZ\fP   \fB__bsp_CLOCK_MHZ__\fP"
.br
.ti -1c
.RI "#define \fBBSP_LITTLE_ENDIAN\fP   \fB__bsp_LITTLE_ENDIAN__\fP"
.br
.ti -1c
.RI "#define \fBCODE\fP   \fB__bsp_CODE_MEMSPACE__\fP"
.br
.ti -1c
.RI "#define \fBXDATA\fP   \fB__bsp_XDATA_MEMSPACE__\fP"
.br
.ti -1c
.RI "#define \fBBSP_ISR_FUNCTION\fP(func, vect)   __bsp_ISR_FUNCTION__(func,vect)"
.br
.ti -1c
.RI "#define \fBBSP_ENABLE_INTERRUPTS\fP()   __bsp_ENABLE_INTERRUPTS__()"
.br
.ti -1c
.RI "#define \fBBSP_DISABLE_INTERRUPTS\fP()   __bsp_DISABLE_INTERRUPTS__()"
.br
.ti -1c
.RI "#define \fBBSP_INTERRUPTS_ARE_ENABLED\fP()   __bsp_INTERRUPTS_ARE_ENABLED__()"
.br
.ti -1c
.RI "#define \fBBSP_ENTER_CRITICAL_SECTION\fP(x)   \fBst\fP( x = __bsp_GET_ISTATE__(); __bsp_DISABLE_INTERRUPTS__(); )"
.br
.ti -1c
.RI "#define \fBBSP_EXIT_CRITICAL_SECTION\fP(x)   __bsp_RESTORE_ISTATE__(x)"
.br
.ti -1c
.RI "#define \fBBSP_CRITICAL_STATEMENT\fP(x)"
.br
.ti -1c
.RI "#define \fBBSP_ASSERT\fP(expr)   \fBst\fP( if (!(expr)) BSP_ASSERT_HANDLER(); )"
.br
.ti -1c
.RI "#define \fBBSP_FORCE_ASSERT\fP()   BSP_ASSERT_HANDLER()"
.br
.ti -1c
.RI "#define \fBBSP_ASSERTS_ARE_ON\fP"
.br
.ti -1c
.RI "#define \fBBSP_STATIC_ASSERT\fP(expr)   void \fBbspDummyPrototype\fP( char \fBdummy\fP[1/((expr)!=0)] )"
.br
.ti -1c
.RI "#define \fBntohs\fP(x)   (((x>>8) & 0xFF) | ((x & 0xFF)<<8))"
.br
.ti -1c
.RI "#define \fBhtons\fP(x)   (((x>>8) & 0xFF) | ((x & 0xFF)<<8))"
.br
.ti -1c
.RI "#define \fBntohl\fP(x)"
.br
.ti -1c
.RI "#define \fBhtonl\fP(x)"
.br
.in -1c
.SS "Typedefs"

.in +1c
.ti -1c
.RI "typedef __bsp_ISTATE_T__ \fBbspIState_t\fP"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "void \fBBSP_Init\fP (void)"
.br
.in -1c
.SH "Define Documentation"
.PP 
.SS "#define \fBBSP\fP"
.PP
Definition at line 53 of file bsp\&.h\&.
.SS "#define \fBBSP_ASSERT\fP(expr)   \fBst\fP( if (!(expr)) BSP_ASSERT_HANDLER(); )"
.PP
Definition at line 125 of file bsp\&.h\&.
.SS "#define \fBBSP_ASSERTS_ARE_ON\fP"
.PP
Definition at line 127 of file bsp\&.h\&.
.SS "#define \fBBSP_CLOCK_MHZ\fP   \fB__bsp_CLOCK_MHZ__\fP"
.PP
Definition at line 62 of file bsp\&.h\&.
.SS "#define \fBBSP_CRITICAL_STATEMENT\fP(x)"\fBValue:\fP
.PP
.nf
st( bspIState_t s;                    \
                                            BSP_ENTER_CRITICAL_SECTION(s);    \
                                            x;                                \
                                            BSP_EXIT_CRITICAL_SECTION(s); )
.fi
.PP
Definition at line 97 of file bsp\&.h\&.
.SS "#define \fBBSP_DISABLE_INTERRUPTS\fP()   __bsp_DISABLE_INTERRUPTS__()"
.PP
Definition at line 85 of file bsp\&.h\&.
.SS "#define \fBBSP_ENABLE_INTERRUPTS\fP()   __bsp_ENABLE_INTERRUPTS__()"
.PP
Definition at line 84 of file bsp\&.h\&.
.SS "#define \fBBSP_ENTER_CRITICAL_SECTION\fP(x)   \fBst\fP( x = __bsp_GET_ISTATE__(); __bsp_DISABLE_INTERRUPTS__(); )"
.PP
Definition at line 95 of file bsp\&.h\&.
.SS "#define \fBBSP_EXIT_CRITICAL_SECTION\fP(x)   __bsp_RESTORE_ISTATE__(x)"
.PP
Definition at line 96 of file bsp\&.h\&.
.SS "#define \fBBSP_FORCE_ASSERT\fP()   BSP_ASSERT_HANDLER()"
.PP
Definition at line 126 of file bsp\&.h\&.
.SS "#define \fBBSP_INTERRUPTS_ARE_ENABLED\fP()   __bsp_INTERRUPTS_ARE_ENABLED__()"
.PP
Definition at line 86 of file bsp\&.h\&.
.SS "#define \fBBSP_ISR_FUNCTION\fP(func, vect)   __bsp_ISR_FUNCTION__(func,vect)"
.PP
Definition at line 82 of file bsp\&.h\&.
.SS "#define \fBBSP_LITTLE_ENDIAN\fP   \fB__bsp_LITTLE_ENDIAN__\fP"
.PP
Definition at line 73 of file bsp\&.h\&.
.SS "#define \fBBSP_STATIC_ASSERT\fP(expr)   void \fBbspDummyPrototype\fP( char \fBdummy\fP[1/((expr)!=0)] )"
.PP
Definition at line 134 of file bsp\&.h\&.
.SS "#define \fBBSP_SUBVER\fP   a"
.PP
Definition at line 55 of file bsp\&.h\&.
.SS "#define \fBBSP_VER\fP   100  /* \fBBSP\fP version 1\&.00a */"
.PP
Definition at line 54 of file bsp\&.h\&.
.SS "#define \fBCODE\fP   \fB__bsp_CODE_MEMSPACE__\fP"
.PP
Definition at line 75 of file bsp\&.h\&.
.SS "#define \fBhtonl\fP(x)"\fBValue:\fP
.PP
.nf
( ((x>>24) & 0xFF) | ((x>>8) & 0xFF00) | \
                        ((x & 0xFF00)<<8) | ((x & 0xFF)<<24)   \
                      )
.fi
.PP
Definition at line 171 of file bsp\&.h\&.
.SS "#define \fBhtons\fP(x)   (((x>>8) & 0xFF) | ((x & 0xFF)<<8))"
.PP
Definition at line 166 of file bsp\&.h\&.
.SS "#define \fBntohl\fP(x)"\fBValue:\fP
.PP
.nf
( ((x>>24) & 0xFF) | ((x>>8) & 0xFF00) | \
                        ((x & 0xFF00)<<8) | ((x & 0xFF)<<24)   \
                      )
.fi
.PP
Definition at line 168 of file bsp\&.h\&.
.SS "#define \fBntohs\fP(x)   (((x>>8) & 0xFF) | ((x & 0xFF)<<8))"
.PP
Definition at line 165 of file bsp\&.h\&.
.SS "#define \fBXDATA\fP   \fB__bsp_XDATA_MEMSPACE__\fP"
.PP
Definition at line 76 of file bsp\&.h\&.
.SH "Typedef Documentation"
.PP 
.SS "typedef __bsp_ISTATE_T__ \fBbspIState_t\fP"
.PP
Definition at line 93 of file bsp\&.h\&.
.SH "Function Documentation"
.PP 
.SS "void \fBBSP_Init\fP (void)"
.PP
Definition at line 56 of file bsp\&.c\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for Chronos Ti - Original Firmware from the source code\&.
