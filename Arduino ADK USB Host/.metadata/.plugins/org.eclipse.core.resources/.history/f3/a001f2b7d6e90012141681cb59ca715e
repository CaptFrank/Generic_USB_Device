/*
 * State_Machine_Implementation.h
 *
 *  Created on: Jul 10, 2013
 *      Author: francispapineau
 */

#ifndef STATE_MACHINE_IMPLEMENTATION_H_
#define STATE_MACHINE_IMPLEMENTATION_H_

 // Emulation Device Class used to group
 // all data needed to operate such an
 // emulation.
 class EMULATION_DEVICE {

	private:
		void set_state(byte state);
		void step_next_state();
		void go_back_one_state();
		void go_error_reboot();
		void go_error_hang();

	public:
		byte return_current_state();
		byte return_next_state();
 };

 // USB HOST Device Class used to group
 // all data needed to operate such a
 // device.
 class USB_HOST_DEVICE {

 	 private:
 		void set_state(byte state);
 		void step_next_state();
 		void go_back_one_state();
 		void go_error_reboot();
 		void go_error_hang();

 	public:
 		byte return_current_state();
 		byte return_next_state();
 };

#endif /* STATE_MACHINE_IMPLEMENTATION_H_ */
